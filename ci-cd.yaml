name: CI-CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: lubnadocker/my-flask-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    # Install dependencies & lint
    - name: Install dependencies
      run: |
        pip install flake8
        flake8 app.py

    # Placeholder unit test
    - name: Run unit tests
      run: |
        echo "def test_health(): assert True" > test_app.py
        python -m unittest test_app.py

    # Log in to DockerHub
    - name: DockerHub login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build and push Docker image
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    # Configure AWS CLI
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # Set up kubectl
    - name: Setup kubectl
      uses: jakejarvis/kubectl-action@v1
      with:
        version: 'latest'

    # Set up Helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    # Deploy to EKS via Helm upgrade
    - name: Helm upgrade
      run: |
        helm upgrade --install my-flask-app ./helm-chart \
          --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
          --set image.tag=latest
